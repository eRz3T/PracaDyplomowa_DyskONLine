teraz należy dodać do naszej aplikacji kluczową funkcję jaką są magazyny, wyobraź sobie że jest to worek do którego są wkładane pliki który można udostępniać innym użytkownikom. Wszystkie osoby mające dostęp do tych magazynów będą miały możliwość prazy z tymi pikami w magazynie. proces tworzenia magazynu: użytkownik klika opcję dodaj na panelu home, wyskakuje mu okno modalne gdzie wpisuje on nazwę danego magazynu oraz wybiera z listy swoich plików te które chce na start dodać do magazynu i klika przycisk stwórz magazyn. do bazy danych zostają dodawane odpowiednie wpisy  najpierw tworzony jest odpowiedni wpis w tabeli storages a nstępnie, jeśli trzeba bo istnieje sytuacja w któerj użytkownik nie wybrał żadnego pliku na start, dodawany jest odpowiedni wpis w tabeli storages_files. dalsze kroki opiszę później 

(bazy danych
sdrive_files

`storages` (
  `id_storages` int NOT NULL AUTO_INCREMENT,
  `name_storages` varchar(45) NOT NULL, < tu ma trafić nazwa magazynu
  `owner_storages` varchar(100) NOT NULL, < tu ma trafić safeid_users z tabeli users osoby tworzącej dany magazyn
  `date_storages` datetime NOT NULL, < tu ma trafić data aktualna podczas tworzenia magazynu
  `active_storages` int NOT NULL, < tu z automatu ma trafić 1
  PRIMARY KEY (`id_storages`)
) 

`storages_files` (
  `id_storages_files` int NOT NULL AUTO_INCREMENT,
  `id_storages` int NOT NULL, tu ma trafić id_storages z tabeli storages
  `id_files` varchar(45) NOT NULL, < tu ma trafić id_files z tabeli files pliku który jest dodawany do magazynu
  `date_storages_file` datetime NOT NULL, < tu ma trafić data aktualna podczas dodawania pliku do magazynu
  `active_storages_files` int NOT NULL, < tu z automatu ma trafić 1
 `modificator_storages_files` varchar(100) NOT NULL, < tu ma trafić safeid_users z tabeli users osoby dodającej plik do magazynu
  PRIMARY KEY (`id_storages_files`)
) 

`files` (
  `id_files` int NOT NULL AUTO_INCREMENT,
  `originalname_files` varchar(100) NOT NULL,
  `cryptedname_files` varchar(100) NOT NULL,
  `cryptedowner_files` varchar(100) NOT NULL,
  `filetype_files` varchar(45) NOT NULL,
  `delete_files` int NOT NULL,
  `dateofdelete_files` datetime DEFAULT NULL,
  `dateofupload_files` datetime NOT NULL,
  PRIMARY KEY (`id_files`)
)

sdrive_logins

`members_storages` (
  `id_members_storages` int NOT NULL AUTO_INCREMENT,
  `id_storage_members_storages` int NOT NULL, < tu ma trafić id_storages z tabeli storages
  `id_user_members_storages` varchar(100) NOT NULL, < tu ma trafić safeid_users z tabeli users osoby dodawanej do magazynu
  `date_members_storages` datetime NOT NULL, < tu ma trafić aktualna data podczas dodawania osoby do magazynu
  `modificator_members_storages` varchar(100) NOT NULL, < tu ma trafić safeid_users z tabeli users osoby która dodaje inną osobę do magazynu
  `active_members_storages` int NOT NULL, < tu ma z automatu trafić 1 
  PRIMARY KEY (`id_members_storages`)
) 

`users` (
  `id_users` int NOT NULL AUTO_INCREMENT,
  `email_users` varchar(100) NOT NULL,
  `password_users` varchar(100) NOT NULL,
  `firstname_users` varchar(100) NOT NULL,
  `lastname_users` varchar(100) NOT NULL,
  `dateofbirth_users` date NOT NULL,
  `safeid_users` varchar(100) NOT NULL,
  `type_users` varchar(45) NOT NULL,
  PRIMARY KEY (`id_users`)
)
)



